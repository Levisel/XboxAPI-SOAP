//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class XboxGamePassEntities : DbContext
    {
        public XboxGamePassEntities()
            : base("name=XboxGamePassEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Auditoria> Auditorias { get; set; }
        public virtual DbSet<Cliente> Clientes { get; set; }
        public virtual DbSet<Pago> Pagos { get; set; }
        public virtual DbSet<Plan> Plans { get; set; }
        public virtual DbSet<Suscripcion> Suscripcions { get; set; }
    
        public virtual ObjectResult<SPClientesConSuscripcionActivaInactiva_Result> SPClientesConSuscripcionActivaInactiva()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPClientesConSuscripcionActivaInactiva_Result>("SPClientesConSuscripcionActivaInactiva");
        }
    
        public virtual ObjectResult<SPObtenerClientesConRenovacionAutomatica_Result> SPObtenerClientesConRenovacionAutomatica()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPObtenerClientesConRenovacionAutomatica_Result>("SPObtenerClientesConRenovacionAutomatica");
        }
    
        public virtual ObjectResult<SPObtenerClientesPorPaisYPlan_Result> SPObtenerClientesPorPaisYPlan()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPObtenerClientesPorPaisYPlan_Result>("SPObtenerClientesPorPaisYPlan");
        }
    
        public virtual ObjectResult<SPObtenerClientesPorPlataforma_Result> SPObtenerClientesPorPlataforma()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPObtenerClientesPorPlataforma_Result>("SPObtenerClientesPorPlataforma");
        }
    
        public virtual ObjectResult<SPObtenerNumeroClientesPorPais_Result> SPObtenerNumeroClientesPorPais()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPObtenerNumeroClientesPorPais_Result>("SPObtenerNumeroClientesPorPais");
        }
    
        public virtual ObjectResult<SPObtenerPagosPorPlan_Result> SPObtenerPagosPorPlan(string nombrePlan)
        {
            var nombrePlanParameter = nombrePlan != null ?
                new ObjectParameter("NombrePlan", nombrePlan) :
                new ObjectParameter("NombrePlan", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPObtenerPagosPorPlan_Result>("SPObtenerPagosPorPlan", nombrePlanParameter);
        }
    }
}
